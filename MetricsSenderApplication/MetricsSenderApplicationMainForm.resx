<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Title.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="From.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Until.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Duration.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ExePath.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Ip.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Mac.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="User.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Url.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>